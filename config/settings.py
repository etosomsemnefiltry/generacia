"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import environ
import dj_database_url
from dotenv import load_dotenv
import os 

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv()

# –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ DJANGO_DEBUG
debug_value = os.environ.get('DJANGO_DEBUG')
if debug_value and debug_value.lower() in ('1', 'true', 'yes', 'on'):
    DEBUG = True
else:
    DEBUG = False

if DEBUG:
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
    SECRET_KEY = "dev-secret-key-change-in-production"
else:
    ALLOWED_HOSTS = ['gir.generacia.energy']
    SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'change-me-in-production')

# DB
DATABASES = {
    "default": dj_database_url.config(
        env="DATABASE_URL",
        default="postgres://appuser:strong_password@127.0.0.1:5432/appdb",
        conn_max_age=600,
        ssl_require=os.environ.get("DB_SSL_REQUIRE", "0") == "1",
    )
}
DATABASES["default"]["ATOMIC_REQUESTS"] = True

INSTALLED_APPS = [
    "jazzmin", # admin panel
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "gir",

    # third-party
    "rest_framework",
    "corsheaders",

    # local
    "core",
]
AUTH_USER_MODEL = "gir.User"

# –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ DEBUG
if DEBUG:
    MIDDLEWARE = [
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]
else:
    MIDDLEWARE = [
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.security.SecurityMiddleware",
        "whitenoise.middleware.WhiteNoiseMiddleware",  # —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]
    STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

ROOT_URLCONF = "config.urls"
WSGI_APPLICATION = "config.wsgi.application"

# DRF (–º–∏–Ω–∏–º—É–º)
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",              # –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",        # <-- –¥–æ–±–∞–≤–∏–ª–∏ JWT
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

from datetime import timedelta
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# CORS/CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if DEBUG:
    CORS_ALLOWED_ORIGINS = ['http://localhost:3000']
    CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']
else:
    CORS_ALLOWED_ORIGINS = ['https://gir.generacia.energy']
    CSRF_TRUSTED_ORIGINS = ['https://gir.generacia.energy']

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'GET',        # —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    'POST',       # —Å–æ–∑–¥–∞–Ω–∏–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    'OPTIONS',    # –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è CORS
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "uk"
TIME_ZONE = "Europe/Kiev"
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Static/Media (—Ä–∞–∑–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ –≤ dev/prod)
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

STATICFILES_DIRS = [BASE_DIR / "static"]  # –µ—Å–ª–∏ –±—É–¥—É—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–∞–π–ª—ã —Ç–µ–º—ã –∞–¥–º–∏–Ω–∫–∏

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ whitenoise –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if not DEBUG:
    WHITENOISE_USE_FINDERS = True
    WHITENOISE_AUTOREFRESH = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    "site_title": "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è ‚Äî –ê–¥–º—ñ–Ω",
    "site_header": "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è",
    "site_brand": "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è",
    "welcome_sign": "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ üëã",
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "copyright": "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è",
    "site_logo": None,  # –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å PNG –∏–∑ STATIC, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç
    "topmenu_links": [
        {"name": "–î–æ–º—ñ–≤–∫–∞", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "API Health", "url": "/api/health/"},
    ],
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,
    "changeform_format": "horizontal_tabs",
    "show_full_sidebar": True,
    "sidebar_collapsed": False,
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Jazzmin
JAZZMIN_UI_TWEAKS = [
    "navbar_small_text",
    "body_small_text",
    "brand_small_text",
    "brand_colour",
    "accent",
    "accent_navbar",
    "navbar",
    "navbar_nav",
    "navbar_nav_text",
    "navbar_nav_small_text",
    "navbar_nav_font_family",
    "navbar_nav_font_size",
    "navbar_nav_font_weight",
    "navbar_nav_text_transform",
    "navbar_nav_font_family_base",
    "navbar_nav_font_size_base",
    "navbar_nav_font_weight_base",
    "navbar_nav_text_transform_base",
    "navbar_nav_font_family_small",
    "navbar_nav_font_size_small",
    "navbar_nav_font_weight_small",
    "navbar_nav_text_transform_small",
    "navbar_nav_font_family_large",
    "navbar_nav_font_size_large",
    "navbar_nav_font_weight_large",
    "navbar_nav_text_transform_large",
]

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # <-- –¥–æ–±–∞–≤–∏–ª–∏
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

LOGIN_URL = '/login/'